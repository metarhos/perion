apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hello-world-node.fullname" . }}
  labels:
    {{- include "hello-world-node.labels" . | nindent 4 }}

  # if you often change cm/secrets and want to restart pods to apply changes. Better not to use in prod. Not related to img tag
  # annotations:
  #   rollme: {{ randAlphaNum 5 | quote }}

spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate: # controls rollouts
      maxSurge: 25% # only for deploy 
      maxUnavailable: 0 # no terminate while new not ok
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "hello-world-node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "hello-world-node.labels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100 # max "preferred" (not mandatory)
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name  
                  operator: In
                  values:
                  - {{ include "hello-world-node.name" . }}  
                - key: app.kubernetes.io/instance  
                  operator: In
                  values:
                  - {{ .Release.Name }}  
              topologyKey: "topology.kubernetes.io/zone"
      containers:
        - name: hello-world-node
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}" # TODO: secrets
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.containerPort }}
              name: http
          readinessProbe: # stable ping
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          startupProbe: # first ping
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 30
          livenessProbe: # monitoring
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3          
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"] # wait before stop, but pay attention on SPOT, each second may be important
          resources:
            {{- toYaml .Values.resources | nindent 12 }}